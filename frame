#include <stdio.h>
#include "./SDL2/SDL.h"
#include "./SDL2/SDL_image.h"

#undef main

#define WINDOW_WIDTH 720
#define WINDOW_HEIGHT 480
#define IMAGE_SIZE 38
#define START_X 171.8
#define END_X 530.8
#define START_Y 151.5
#define END_Y 229.2

int main(int argc, char* argv[]) {
    // 初始化SDL
    if (SDL_Init(SDL_INIT_VIDEO) != 0) {
        printf("SDL初始化失敗：%s\n", SDL_GetError());
        return 1;
    }

    // 創建視窗
    SDL_Window* window = SDL_CreateWindow("滑鼠移動", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, WINDOW_WIDTH, WINDOW_HEIGHT, SDL_WINDOW_SHOWN);
    if (window == NULL) {
        printf("視窗創建失敗：%s\n", SDL_GetError());
        SDL_Quit();
        return 1;
    }

    // 創建渲染器
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
    if (renderer == NULL) {
        printf("渲染器創建失敗：%s\n", SDL_GetError());
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }

    // 加載圖片
    SDL_Surface* imageSurface = IMG_Load("frame.png");
    if (imageSurface == NULL) {
        printf("圖片加載失敗：%s\n", SDL_GetError());
        SDL_DestroyRenderer(renderer);
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }

    // 創建紋理
    SDL_Texture* texture = SDL_CreateTextureFromSurface(renderer, imageSurface);
    if (texture == NULL) {
        printf("紋理創建失敗：%s\n", SDL_GetError());
        SDL_FreeSurface(imageSurface);
        SDL_DestroyRenderer(renderer);
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }

    // 釋放加載的圖片表面
    SDL_FreeSurface(imageSurface);

    // 計算X坐標的分割數量和間隔
    int numImagesX = (int)((END_X - START_X) / IMAGE_SIZE) + 1;
    float intervalX = (END_X - START_X) / (numImagesX - 1);

    // 計算Y坐標的分割數量和間隔
    int numImagesY = (int)((END_Y - START_Y) / IMAGE_SIZE) + 1;
    float intervalY = (END_Y - START_Y) / (numImagesY - 1);

    // 圖塊顯示狀態陣列
    int imageVisible[numImagesX * numImagesY];

    // 初始化圖塊顯示狀態，默認為隱藏
    for (int i = 0; i < numImagesX * numImagesY; i++) {
        imageVisible[i] = 0;
    }

    // 事件循環
    SDL_Event event;
    while (1) {
        if (SDL_PollEvent(&event)) {
            if (event.type == SDL_QUIT) {
                break;
            } else if (event.type == SDL_MOUSEMOTION) {
                int mouseX = event.motion.x;
                int mouseY = event.motion.y;

                // 遍歷所有圖塊，檢查滑鼠是否在圖塊的範圍內
                for (int i = 0; i < numImagesX * numImagesY; i++) {
                    int row = i / numImagesX;
                    int col = i % numImagesX;
                    float x = START_X + col * intervalX;
                    float y = START_Y + row * intervalY;

                    if (mouseX >= x && mouseX <= x + IMAGE_SIZE && mouseY >= y && mouseY <= y + IMAGE_SIZE) {
                        // 顯示滑鼠所在的圖塊
                        imageVisible[i] = 1;
                    } else {
                        // 隱藏其他圖塊
                        imageVisible[i] = 0;
                    }
                }
            }
        }

        // 清空視窗
        SDL_RenderClear(renderer);

        // 繪製圖塊
        for (int i = 0; i < numImagesX * numImagesY; i++) {
            if (imageVisible[i]) {
                int row = i / numImagesX;
                int col = i % numImagesX;
                float x = START_X + col * intervalX;
                float y = START_Y + row * intervalY;
                SDL_Rect destRect = {(int)x, (int)y, IMAGE_SIZE, IMAGE_SIZE};
                SDL_RenderCopy(renderer, texture, NULL, &destRect);
            }
        }

        // 更新渲染器
        SDL_RenderPresent(renderer);
    }

    // 釋放資源
    SDL_DestroyTexture(texture);
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();

    return 0;
}
