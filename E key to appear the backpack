#include <stdio.h>
#include "./SDL2/SDL.h"
#include "./SDL2/SDL_image.h"
#undef main

int main(int argc, char** argv) {
    // Initialize SDL
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        fprintf(stderr, "Failed to initialize SDL: %s\n", SDL_GetError());
        return 1;
    }

    // Initialize SDL_image
    if (IMG_Init(IMG_INIT_PNG) != IMG_INIT_PNG) {
        fprintf(stderr, "Failed to initialize SDL_image: %s\n", IMG_GetError());
        SDL_Quit();
        return 1;
    }

    // Create window
    SDL_Window* window = SDL_CreateWindow("SDL Image Example", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 720, 480, SDL_WINDOW_SHOWN);
    if (!window) {
        fprintf(stderr, "Failed to create window: %s\n", SDL_GetError());
        IMG_Quit();
        SDL_Quit();
        return 1;
    }

    // Create renderer
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (!renderer) {
        fprintf(stderr, "Failed to create renderer: %s\n", SDL_GetError());
        SDL_DestroyWindow(window);
        IMG_Quit();
        SDL_Quit();
        return 1;
    }

    // Load image as texture
    SDL_Texture* imageTexture = IMG_LoadTexture(renderer, "backpack2.png");
    if (!imageTexture) {
        fprintf(stderr, "Failed to load image: %s\n", IMG_GetError());
        SDL_DestroyRenderer(renderer);
        SDL_DestroyWindow(window);
        IMG_Quit();
        SDL_Quit();
        return 1;
    }

    // Set the destination rectangle
    SDL_Rect destRect;
    destRect.x = 260;  // x-coordinate of the destination rectangle
    destRect.y = 190;  // y-coordinate of the destination rectangle
    destRect.w = 200;  // width of the destination rectangle
    destRect.h = 100;  // height of the destination rectangle

    // Set initial texture visibility
    int textureVisible = 1;

    // Main loop
    SDL_Event event;
    while (SDL_WaitEvent(&event)) {
        switch (event.type) {
            case SDL_QUIT:
                goto end;
            case SDL_KEYDOWN:
                if (event.key.keysym.sym == SDLK_e) {
                    // Toggle texture visibility
                    textureVisible = !textureVisible;
                }
                break;
        }

        // Clear renderer
        SDL_RenderClear(renderer);

        if (textureVisible) {
            // Copy texture to renderer
            SDL_RenderCopy(renderer, imageTexture, NULL, &destRect);
        }

        // Update renderer
        SDL_RenderPresent(renderer);
    }

end:
    // Destroy texture, renderer, and window
    SDL_DestroyTexture(imageTexture);
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);

    // Quit SDL_image and SDL
    IMG_Quit();
    SDL_Quit();

    return 0;
}
